- content_for :opengraph_meta_tags, opengraph_meta_tags_for(@menu_item)
- labels = MenuLabel.all
= content_tag :div, :class => "label_div_wrapper" do
  = content_tag :div, " ", :class => "label_div_tri"

  = content_tag :div, :class => "label_div" do
    = content_tag :ul do
      - labels.each do |x|
        = content_tag :li, x.menu_label, :id => x.id
#current_content_block
  #bread_crumbs
    = link_to("← "+@menu_item.restaurant.name, @menu_item.restaurant)
  #current_info_wrapper{:data => {:latitude=> @menu_item.restaurant.latitude, :longitude => @menu_item.restaurant.longitude, :menu_item_id => @menu_item.id}}
    #img_column
      #image_thumbnail_middle_size
        -#= image_tag(get_photo_url_4_thumbnail(params[:id]))
        = image_tag "temp_image.png", :id =>"plupload_thumbnail"

      - visibility_class =  get_photos(params[:id]).count == 0 ? "himportant" : " "
      #icons_img_wrapper
        %span.photos_inline{:class => visibility_class}
          #gallery
            = render :partial => "gallery_link"
        %span.add_photos_inline
          =link_to "add photos","#", :id => "plupload"
        #photos_icon &nbsp;
    #text_column
      %h1.current_title= @menu_item.name
      #stars_wrap

        -#TODO: almazom. bad catching exception (((
        - begin
          - if @menu_item.menu_item_avg_rating_count
            - avg = @menu_item.menu_item_avg_rating_count.avg_rating
          - else
            - avg = 0
        - rescue
          - avg = 0

        #star_average{:class => "star_sm stars_"+stars_class_normalize(avg), :data =>{:rating => avg}} &nbsp;
      #rating
        -if @menu_item.menu_item_avg_rating_count
          %span= @menu_item.menu_item_avg_rating_count.count
          Reviews 

        -#:erb
          -#<% @url = "http://getcrave.com/items/" + @menu_item.friendly_id %>
          -#<fb:like href="<%= @url %>" send="false" width="350" show_faces="false" font=""></fb:like>
        
      #desc_wrap

        #description= @menu_item.description
        #dishlabels
          %strong Dish labels:
        #labels
          - @menu_label_association = MenuLabelAssociation.new
          - if current_user
            - user_id = current_user.id
          - else
            - user_id = nil

          = form_for(@menu_label_association, :remote => true) do |f|
            = f.hidden_field :menu_item_id, :value => @menu_item.id
            = f.hidden_field :menu_label_id
            = f.hidden_field :user_id, :value => user_id

          .birdy_update
            = render :partial => "labels_list"
        .plus &nbsp;
        =link_to("Add a label", "#", :class => :mi_add_label)
    = render :partial => "/save"


  #comment_wrapper_wrapper
    #comment_wrapper


      #content_title
        Have you tried this?
      =form_for(MenuItemRating.new, :remote => true) do |f|
        #fb_twitter_checkboxes
          - @auth = Authorization.where(:user_id => user_id).first
          Share on:
          - if Authorization.where(:user_id => user_id, :provider => 'facebook').exists?
            #inline_fb
              = check_box_tag("facebook","yes", @auth.user.auto_post_to_facebook)
          - if Authorization.where(:user_id => user_id, :provider => 'twitter').exists?
            #inline_twitter
              = check_box_tag("twitter","yes", @auth.user.auto_post_to_twitter)
          - if Authorization.where(:user_id => user_id, :provider => 'twitter').exists?
            #inline_foursquare
              = check_box_tag("foursquare","yes", @auth.user.auto_post_to_foursquare)
        =f.hidden_field :rating
        =f.hidden_field :menu_item_id, :value =>@menu_item.id
        .star_gray{:id => @menu_item.id, :data =>{:model => "user_menu_item_ratings"}} &nbsp;
        #input_comment
          = f.text_area :review
          = f.hidden_field :menu_item_id, :value =>@menu_item.id
        #submit_block
          = render :partial => "/button"

-if  @menu_item.menu_item_ratings.any?
  #reviews_wrapper{:class => controller.controller_name}
    %h3.review
      Reviews

    #update_place= render :partial => "review"
- else
  #reviews_wrapper{:class => controller.controller_name}
    #update_place

